app.post('/register', (req, res) => {
  const { name, email, password } = req.body;
  bcrypt.hash(password, 10)
    .then(hashedPassword => {
      UserModel.create({ name, email, password: hashedPassword })
        .then(user => res.json("Success"))
        .catch(err => res.json(err))
    }).catch(err => res.json(err))
})

app.post('/login', (req, res) => {
  const { email, password } = req.body;
  UserModel.findOne({ email: email })
    .then(user => {
      if (user) {
        bcrypt.compare(password, user.password, (err, response) => {
          if (response) {
            const token = jwt.sign({ email: user.email, role: user.role },
              "jwt-secret-key", { expiresIn: '1d' })
            res.cookie('token', token)
            return res.json({ Status: "Success", role: user.role })
          } else {
            return res.json("The password is incorrect")
          }
        })
      } else {
        return res.json("No record existed")
      }
    })
})
